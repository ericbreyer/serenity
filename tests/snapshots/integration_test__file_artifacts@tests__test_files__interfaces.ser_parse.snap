---
source: tests/integration_test.rs
expression: result
---
[line    1] Function Declaration: 9267239460987309703_add
[line    1] ╰─── Function Expression:
[line    1]      ├─── Name: 9267239460987309703_add
[line    1]      ├─── Return Type: fn[*struct adder_impl { self: *nil, vtable: struct adder_vtable { add: fn[](*nil) -> fn[*nil](int) -> int, }, }](int) -> int
[line    1]      ├─── Params:
[line    1]      │    ╰─── self: *struct adder_impl { self: *nil, vtable: struct adder_vtable { add: fn[](*nil) -> fn[*nil](int) -> int, }, }
[line    1]      ╰─── Body: 
[line    1]           ╰─── Return:
[line    0]                ╰─── Function: 9267239460987309703_add_inner
[line    0]                     ╰─── Function Expression:
[line    0]                          ├─── Name: 9267239460987309703_add_inner
[line    0]                          ├─── Return Type: int
[line    0]                          ├─── Captures:
[line    0]                          │    ╰─── self
[line    0]                          ├─── Params:
[line    0]                          │    ╰─── a0: int
[line    0]                          ╰─── Body: 
[line    1]                               ╰─── Return:
[line    2]                                    ╰─── Call:
[line    2]                                         ├─── Call:
[line    2]                                         │    ├─── Get: "add"
[line    2]                                         │    │    ╰─── Get: "vtable"
[line    2]                                         │    │         ╰─── Deref: 
[line    2]                                         │    │              ╰─── Variable: self
[line    2]                                         │    ╰─── Get: "self"
[line    2]                                         │         ╰─── Deref: 
[line    2]                                         │              ╰─── Variable: self
[line    2]                                         ╰─── Variable: a0
[line    3] Function Declaration: impl_adder<T>
[line    3] ╰─── Function Expression:
[line    3]      ├─── Name: impl_adder
[line    3]      ├─── Return Type: struct adder_impl { self: *nil, vtable: struct adder_vtable { add: fn[](*nil) -> fn[*nil](int) -> int, }, }
[line    3]      ├─── Params:
[line    3]      │    ╰─── self: *<T>
[line    3]      ╰─── Body: 
[line    4]           ├─── Var Declaration: vtab
[line    5]           ├─── Expression: 
[line    5]           │    ╰─── Assign:
[line    5]           │         ├─── Get: "add"
[line    5]           │         │    ╰─── Variable: vtab
[line    5]           │         ╰─── DoubleColon: <T>::"add"
[line    5]           ╰─── Return:
[line    7]                ╰─── StructInitializer: struct adder_impl {self: *nil, vtable: struct adder_vtable { add: fn[](*nil) -> fn[*nil](int) -> int, }, }
[line    7]                     ├───  vtable: 
[line    7]                     │    ╰─── Variable: vtab
[line    7]                     ╰───  self: 
[line    7]                          ╰─── Variable: self
[line    1] Function Declaration: 17291069585011617692_add
[line    1] ╰─── Function Expression:
[line    1]      ├─── Name: 17291069585011617692_add
[line    1]      ├─── Return Type: fn[*struct c { i: int, }](int) -> int
[line    1]      ├─── Params:
[line    1]      │    ╰─── self: *struct c { i: int, }
[line    1]      ╰─── Body: 
[line    1]           ╰─── Return:
[line    0]                ╰─── Function: 17291069585011617692_add_inner
[line    0]                     ╰─── Function Expression:
[line    0]                          ├─── Name: 17291069585011617692_add_inner
[line    0]                          ├─── Return Type: int
[line    0]                          ├─── Captures:
[line    0]                          │    ╰─── self
[line    0]                          ├─── Params:
[line    0]                          │    ╰─── a0: int
[line    1] Var Declaration: c_adder_vtable
[line    3] Function Declaration: c_impl_adder
[line    3] ╰─── Function Expression:
[line    3]      ├─── Name: c_impl_adder
[line    3]      ├─── Return Type: struct adder_impl { self: *nil, vtable: struct adder_vtable { add: fn[](*nil) -> fn[*nil](int) -> int, }, }
[line    3]      ├─── Params:
[line    3]      │    ╰─── self: *struct c { i: int, }
[line    3]      ╰─── Body: 
[line    4]           ├─── Expression: 
[line    4]           │    ╰─── Assign:
[line    4]           │         ├─── Get: "add"
[line    4]           │         │    ╰─── Variable: c_adder_vtable
[line    4]           │         ╰─── Variable: 17291069585011617692_add
[line    4]           ╰─── Return:
[line    6]                ╰─── StructInitializer: struct adder_impl {self: *nil, vtable: struct adder_vtable { add: fn[](*nil) -> fn[*nil](int) -> int, }, }
[line    6]                     ├───  vtable: 
[line    6]                     │    ╰─── Variable: c_adder_vtable
[line    6]                     ╰───  self: 
[line    6]                          ╰─── Variable: self
[line    9] Function Declaration: 17291069585011617692_add
[line    9] ╰─── Function Expression:
[line    9]      ├─── Name: 17291069585011617692_add
[line    9]      ├─── Return Type: fn[*struct c { i: int, }](int) -> int
[line    9]      ├─── Params:
[line    9]      │    ╰─── self: *struct c { i: int, }
[line    9]      ╰─── Body: 
[line    9]           ╰─── Return:
[line    0]                ╰─── Function: 17291069585011617692_add_inner
[line    0]                     ╰─── Function Expression:
[line    0]                          ├─── Name: 17291069585011617692_add_inner
[line    0]                          ├─── Return Type: int
[line    0]                          ├─── Captures:
[line    0]                          │    ╰─── self
[line    0]                          ├─── Params:
[line    0]                          │    ╰─── j: int
[line    0]                          ╰─── Body: 
[line   10]                               ├─── Var Declaration: rself
[line   10]                               │    ╰───  Initializer
[line   10]                               │         ╰─── Cast: *struct c { i: int, }
[line   10]                               │              ╰─── Variable: self
[line   10]                               ╰─── Return:
[line   11]                                    ╰─── Assign:
[line   11]                                         ├─── Get: "i"
[line   11]                                         │    ╰─── Deref: 
[line   11]                                         │         ╰─── Variable: rself
[line   11]                                         ╰─── Binary: Plus
[line   11]                                              ├─── Get: "i"
[line   11]                                              │    ╰─── Deref: 
[line   11]                                              │         ╰─── Variable: rself
[line   11]                                              ╰─── Variable: j
[line    1] Function Declaration: 1865986952864376157_add
[line    1] ╰─── Function Expression:
[line    1]      ├─── Name: 1865986952864376157_add
[line    1]      ├─── Return Type: fn[*struct d { i: int, }](int) -> int
[line    1]      ├─── Params:
[line    1]      │    ╰─── self: *struct d { i: int, }
[line    1]      ╰─── Body: 
[line    1]           ╰─── Return:
[line    0]                ╰─── Function: 1865986952864376157_add_inner
[line    0]                     ╰─── Function Expression:
[line    0]                          ├─── Name: 1865986952864376157_add_inner
[line    0]                          ├─── Return Type: int
[line    0]                          ├─── Captures:
[line    0]                          │    ╰─── self
[line    0]                          ├─── Params:
[line    0]                          │    ╰─── a0: int
[line    1] Var Declaration: d_adder_vtable
[line    3] Function Declaration: d_impl_adder
[line    3] ╰─── Function Expression:
[line    3]      ├─── Name: d_impl_adder
[line    3]      ├─── Return Type: struct adder_impl { self: *nil, vtable: struct adder_vtable { add: fn[](*nil) -> fn[*nil](int) -> int, }, }
[line    3]      ├─── Params:
[line    3]      │    ╰─── self: *struct d { i: int, }
[line    3]      ╰─── Body: 
[line    4]           ├─── Expression: 
[line    4]           │    ╰─── Assign:
[line    4]           │         ├─── Get: "add"
[line    4]           │         │    ╰─── Variable: d_adder_vtable
[line    4]           │         ╰─── Variable: 1865986952864376157_add
[line    4]           ╰─── Return:
[line    6]                ╰─── StructInitializer: struct adder_impl {self: *nil, vtable: struct adder_vtable { add: fn[](*nil) -> fn[*nil](int) -> int, }, }
[line    6]                     ├───  vtable: 
[line    6]                     │    ╰─── Variable: d_adder_vtable
[line    6]                     ╰───  self: 
[line    6]                          ╰─── Variable: self
[line   18] Function Declaration: 1865986952864376157_add
[line   18] ╰─── Function Expression:
[line   18]      ├─── Name: 1865986952864376157_add
[line   18]      ├─── Return Type: fn[*struct d { i: int, }](int) -> int
[line   18]      ├─── Params:
[line   18]      │    ╰─── self: *struct d { i: int, }
[line   18]      ╰─── Body: 
[line   18]           ╰─── Return:
[line    0]                ╰─── Function: 1865986952864376157_add_inner
[line    0]                     ╰─── Function Expression:
[line    0]                          ├─── Name: 1865986952864376157_add_inner
[line    0]                          ├─── Return Type: int
[line    0]                          ├─── Captures:
[line    0]                          │    ╰─── self
[line    0]                          ├─── Params:
[line    0]                          │    ╰─── j: int
[line    0]                          ╰─── Body: 
[line   19]                               ├─── Var Declaration: rself
[line   19]                               │    ╰───  Initializer
[line   19]                               │         ╰─── Cast: *struct d { i: int, }
[line   19]                               │              ╰─── Variable: self
[line   19]                               ╰─── Return:
[line   20]                                    ╰─── Assign:
[line   20]                                         ├─── Get: "i"
[line   20]                                         │    ╰─── Deref: 
[line   20]                                         │         ╰─── Variable: rself
[line   20]                                         ╰─── Binary: Minus
[line   20]                                              ├─── Get: "i"
[line   20]                                              │    ╰─── Deref: 
[line   20]                                              │         ╰─── Variable: rself
[line   20]                                              ╰─── Variable: j
[line   31] Function Declaration: stuff
[line   31] ╰─── Function Expression:
[line   31]      ├─── Name: stuff
[line   31]      ├─── Return Type: int
[line   31]      ├─── Params:
[line   31]      │    ╰─── adder: struct adder_impl { self: *nil, vtable: struct adder_vtable { add: fn[](*nil) -> fn[*nil](int) -> int, }, }
[line   31]      ╰─── Body: 
[line   31]           ╰─── Return:
[line   32]                ╰─── Call:
[line   32]                     ├─── Get: "add"
[line   32]                     │    ╰─── Variable: adder
[line   32]                     ╰─── Literal: 2
[line   35] Function Declaration: main
[line   35] ╰─── Function Expression:
[line   35]      ├─── Name: main
[line   35]      ├─── Return Type: int
[line   35]      ╰─── Body: 
[line   37]           ├─── Var Declaration: c_conc
[line   37]           │    ╰───  Initializer
[line   37]           │         ╰─── StructInitializer: struct c {i: int, }
[line   37]           │              ╰───  i: 
[line   37]           │                   ╰─── Literal: 0
[line   38]           ├─── Var Declaration: c_impl
[line   38]           │    ╰───  Initializer
[line   38]           │         ╰─── Call:
[line   38]           │              ├─── Variable: c_impl_adder
[line   38]           │              ╰─── Ref: 
[line   38]           │                   ╰─── Variable: c_conc
[line   40]           ├─── Var Declaration: d_conc
[line   40]           │    ╰───  Initializer
[line   40]           │         ╰─── StructInitializer: struct d {i: int, }
[line   40]           │              ╰───  i: 
[line   40]           │                   ╰─── Literal: 0
[line   41]           ├─── Var Declaration: d_impl
[line   41]           │    ╰───  Initializer
[line   41]           │         ╰─── Call:
[line   41]           │              ├─── Variable: d_impl_adder
[line   41]           │              ╰─── Ref: 
[line   41]           │                   ╰─── Variable: d_conc
[line   43]           ├─── Expression: 
[line   43]           │    ╰─── Call:
[line   43]           │         ├─── Get: "add"
[line   43]           │         │    ╰─── Variable: c_impl
[line   43]           │         ╰─── Literal: 2
[line   44]           ├─── Expression: 
[line   44]           │    ╰─── Call:
[line   44]           │         ├─── Get: "add"
[line   44]           │         │    ╰─── Variable: c_conc
[line   44]           │         ╰─── Literal: 2
[line   45]           ├─── Expression: 
[line   45]           │    ╰─── Call:
[line   45]           │         ├─── Variable: stuff
[line   45]           │         ╰─── Variable: c_impl
[line   47]           ├─── Expression: 
[line   47]           │    ╰─── Call:
[line   47]           │         ├─── Get: "add"
[line   47]           │         │    ╰─── Variable: d_impl
[line   47]           │         ╰─── Literal: 2
[line   48]           ├─── Expression: 
[line   48]           │    ╰─── Call:
[line   48]           │         ├─── Get: "add"
[line   48]           │         │    ╰─── Variable: d_conc
[line   48]           │         ╰─── Literal: 2
[line   49]           ├─── Expression: 
[line   49]           │    ╰─── Call:
[line   49]           │         ├─── Variable: stuff
[line   49]           │         ╰─── Variable: d_impl
[line   49]           ╰─── Return:
[line   51]                ╰─── Binary: Minus
[line   51]                     ├─── Get: "i"
[line   51]                     │    ╰─── Variable: c_conc
[line   51]                     ╰─── Get: "i"
[line   51]                          ╰─── Variable: d_conc
