---
source: tests/integration_test.rs
expression: result
---
<Const        "const"       [1]>
<Identifier   "NUM_COMPOSITES" [1]>
<Equal        "="           [1]>
<Number       "20"          [1]>
<Semicolon    ";"           [1]>
<Var          "let"         [2]>
<Identifier   "highly_composites" [2]>
<Colon        ":"           [2]>
<LeftBracket  "["           [2]>
<SimpleType   "int"         [2]>
<Semicolon    ";"           [2]>
<Identifier   "NUM_COMPOSITES" [2]>
<RightBracket "]"           [2]>
<Semicolon    ";"           [2]>
<Fun          "fn"          [4]>
<Identifier   "count_divisors" [4]>
<LeftParen    "("           [4]>
<Identifier   "num"         [4]>
<Colon        ":"           [4]>
<SimpleType   "int"         [4]>
<RightParen   ")"           [4]>
<RightArrow   "->"          [4]>
<SimpleType   "int"         [4]>
<LeftBrace    "{"           [4]>
<If           "if"          [5]>
<LeftParen    "("           [5]>
<Identifier   "num"         [5]>
<EqualEqual   "=="          [5]>
<Number       "1"           [5]>
<RightParen   ")"           [5]>
<LeftBrace    "{"           [5]>
<Return       "return"      [6]>
<Number       "1"           [6]>
<Semicolon    ";"           [6]>
<RightBrace   "}"           [7]>
<Var          "let"         [8]>
<Identifier   "num_factors" [8]>
<Equal        "="           [8]>
<Number       "2"           [8]>
<Semicolon    ";"           [8]>
<Var          "let"         [9]>
<Identifier   "potential_divisor" [9]>
<Equal        "="           [9]>
<Number       "2"           [9]>
<Semicolon    ";"           [9]>
<While        "while"       [10]>
<LeftParen    "("           [10]>
<Identifier   "potential_divisor" [10]>
<Less         "<"           [10]>
<Identifier   "num"         [10]>
<RightParen   ")"           [10]>
<LeftBrace    "{"           [10]>
<If           "if"          [11]>
<LeftParen    "("           [11]>
<Identifier   "num"         [11]>
<Percent      "%"           [11]>
<Identifier   "potential_divisor" [11]>
<EqualEqual   "=="          [11]>
<Number       "0"           [11]>
<RightParen   ")"           [11]>
<LeftBrace    "{"           [11]>
<Identifier   "num_factors" [12]>
<Equal        "="           [12]>
<Identifier   "num_factors" [12]>
<Plus         "+"           [12]>
<Number       "1"           [12]>
<Semicolon    ";"           [12]>
<RightBrace   "}"           [13]>
<Identifier   "potential_divisor" [15]>
<Equal        "="           [15]>
<Identifier   "potential_divisor" [15]>
<Plus         "+"           [15]>
<Number       "1"           [15]>
<Semicolon    ";"           [15]>
<RightBrace   "}"           [16]>
<Return       "return"      [17]>
<Identifier   "num_factors" [17]>
<Semicolon    ";"           [17]>
<RightBrace   "}"           [18]>
<Fun          "fn"          [20]>
<Identifier   "main"        [20]>
<LeftParen    "("           [20]>
<RightParen   ")"           [20]>
<RightArrow   "->"          [20]>
<SimpleType   "int"         [20]>
<LeftBrace    "{"           [20]>
<Var          "let"         [21]>
<Identifier   "n"           [21]>
<Equal        "="           [21]>
<Number       "0"           [21]>
<Semicolon    ";"           [21]>
<Var          "let"         [22]>
<Identifier   "cur"         [22]>
<Equal        "="           [22]>
<Number       "1"           [22]>
<Semicolon    ";"           [22]>
<Var          "let"         [23]>
<Identifier   "max_factors" [23]>
<Equal        "="           [23]>
<Number       "0"           [23]>
<Semicolon    ";"           [23]>
<While        "while"       [24]>
<LeftParen    "("           [24]>
<Identifier   "n"           [24]>
<Less         "<"           [24]>
<Identifier   "NUM_COMPOSITES" [24]>
<RightParen   ")"           [24]>
<LeftBrace    "{"           [24]>
<Var          "let"         [25]>
<Identifier   "factors"     [25]>
<Equal        "="           [25]>
<Identifier   "count_divisors" [25]>
<LeftParen    "("           [25]>
<Identifier   "cur"         [25]>
<RightParen   ")"           [25]>
<Semicolon    ";"           [25]>
<If           "if"          [26]>
<LeftParen    "("           [26]>
<Identifier   "factors"     [26]>
<Greater      ">"           [26]>
<Identifier   "max_factors" [26]>
<RightParen   ")"           [26]>
<LeftBrace    "{"           [26]>
<Identifier   "highly_composites" [27]>
<LeftBracket  "["           [27]>
<Identifier   "n"           [27]>
<RightBracket "]"           [27]>
<Equal        "="           [27]>
<Identifier   "cur"         [27]>
<Semicolon    ";"           [27]>
<Identifier   "max_factors" [28]>
<Equal        "="           [28]>
<Identifier   "factors"     [28]>
<Semicolon    ";"           [28]>
<Identifier   "n"           [29]>
<Equal        "="           [29]>
<Identifier   "n"           [29]>
<Plus         "+"           [29]>
<Number       "1"           [29]>
<Semicolon    ";"           [29]>
<RightBrace   "}"           [30]>
<Identifier   "cur"         [31]>
<Equal        "="           [31]>
<Identifier   "cur"         [31]>
<Plus         "+"           [31]>
<Number       "1"           [31]>
<Semicolon    ";"           [31]>
<RightBrace   "}"           [32]>
<Var          "let"         [33]>
<Identifier   "i"           [33]>
<Equal        "="           [33]>
<Number       "0"           [33]>
<Semicolon    ";"           [33]>
<Var          "let"         [34]>
<Identifier   "fingerprint" [34]>
<Equal        "="           [34]>
<Number       "0"           [34]>
<Semicolon    ";"           [34]>
<While        "while"       [35]>
<LeftParen    "("           [35]>
<Identifier   "i"           [35]>
<Less         "<"           [35]>
<Identifier   "NUM_COMPOSITES" [35]>
<RightParen   ")"           [35]>
<LeftBrace    "{"           [35]>
<Identifier   "fingerprint" [36]>
<Equal        "="           [36]>
<Identifier   "fingerprint" [36]>
<Plus         "+"           [36]>
<Identifier   "highly_composites" [36]>
<LeftBracket  "["           [36]>
<Identifier   "i"           [36]>
<RightBracket "]"           [36]>
<Star         "*"           [36]>
<Identifier   "i"           [36]>
<Semicolon    ";"           [36]>
<Identifier   "i"           [37]>
<Equal        "="           [37]>
<Identifier   "i"           [37]>
<Plus         "+"           [37]>
<Number       "1"           [37]>
<Semicolon    ";"           [37]>
<RightBrace   "}"           [38]>
<Return       "return"      [39]>
<Identifier   "fingerprint" [39]>
<Semicolon    ";"           [39]>
<RightBrace   "}"           [40]>
<Eof          ""            [40]>
