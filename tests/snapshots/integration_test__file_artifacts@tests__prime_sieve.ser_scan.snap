---
source: tests/integration_test.rs
expression: result
---
<Type         "type"        [1]>
<Identifier   "generator"   [1]>
<Interface    "interface"   [1]>
<LeftBrace    "{"           [1]>
<Identifier   "next"        [2]>
<Colon        ":"           [2]>
<Fun          "fn"          [2]>
<LeftParen    "("           [2]>
<RightParen   ")"           [2]>
<RightArrow   "->"          [2]>
<SimpleType   "int"         [2]>
<Comma        ","           [2]>
<RightBrace   "}"           [3]>
<Semicolon    ";"           [3]>
<Type         "type"        [5]>
<Identifier   "nat_gen"     [5]>
<Struct       "struct"      [5]>
<LeftBrace    "{"           [5]>
<Identifier   "i"           [6]>
<Colon        ":"           [6]>
<SimpleType   "int"         [6]>
<Comma        ","           [6]>
<RightBrace   "}"           [7]>
<Implements   "implements"  [7]>
<Identifier   "generator"   [7]>
<Semicolon    ";"           [7]>
<Fun          "fun"         [9]>
<LeftParen    "("           [9]>
<Identifier   "self"        [9]>
<Colon        ":"           [9]>
<Star         "*"           [9]>
<Struct       "struct"      [9]>
<Identifier   "nat_gen"     [9]>
<RightParen   ")"           [9]>
<Identifier   "next"        [9]>
<LeftParen    "("           [9]>
<RightParen   ")"           [9]>
<RightArrow   "->"          [9]>
<SimpleType   "int"         [9]>
<LeftBrace    "{"           [9]>
<Var          "let"         [10]>
<Identifier   "i"           [10]>
<Equal        "="           [10]>
<Identifier   "self"        [10]>
<RightArrow   "->"          [10]>
<Identifier   "i"           [10]>
<Semicolon    ";"           [10]>
<Identifier   "self"        [11]>
<RightArrow   "->"          [11]>
<Identifier   "i"           [11]>
<Equal        "="           [11]>
<Identifier   "i"           [11]>
<Plus         "+"           [11]>
<Number       "1"           [11]>
<Semicolon    ";"           [11]>
<Return       "return"      [12]>
<Identifier   "i"           [12]>
<Semicolon    ";"           [12]>
<RightBrace   "}"           [13]>
<Type         "type"        [15]>
<Identifier   "identity"    [15]>
<Struct       "struct"      [15]>
<LeftBrace    "{"           [15]>
<Identifier   "gen"         [16]>
<Colon        ":"           [16]>
<Impl         "impl"        [16]>
<Identifier   "generator"   [16]>
<Comma        ","           [16]>
<RightBrace   "}"           [17]>
<Implements   "implements"  [17]>
<Identifier   "generator"   [17]>
<Semicolon    ";"           [17]>
<Fun          "fun"         [19]>
<LeftParen    "("           [19]>
<Identifier   "self"        [19]>
<Colon        ":"           [19]>
<Star         "*"           [19]>
<Struct       "struct"      [19]>
<Identifier   "identity"    [19]>
<RightParen   ")"           [19]>
<Identifier   "next"        [19]>
<LeftParen    "("           [19]>
<RightParen   ")"           [19]>
<RightArrow   "->"          [19]>
<SimpleType   "int"         [19]>
<LeftBrace    "{"           [19]>
<Return       "return"      [20]>
<Identifier   "self"        [20]>
<RightArrow   "->"          [20]>
<Identifier   "gen"         [20]>
<Dot          "."           [20]>
<Identifier   "next"        [20]>
<LeftParen    "("           [20]>
<RightParen   ")"           [20]>
<Semicolon    ";"           [20]>
<RightBrace   "}"           [21]>
<Type         "type"        [23]>
<Identifier   "filter"      [23]>
<Struct       "struct"      [23]>
<LeftBrace    "{"           [23]>
<Identifier   "gen"         [24]>
<Colon        ":"           [24]>
<Impl         "impl"        [24]>
<Identifier   "generator"   [24]>
<Comma        ","           [24]>
<Identifier   "pred"        [25]>
<Colon        ":"           [25]>
<Fun          "fn"          [25]>
<LeftBracket  "["           [25]>
<SimpleType   "int"         [25]>
<RightBracket "]"           [25]>
<LeftParen    "("           [25]>
<SimpleType   "int"         [25]>
<RightParen   ")"           [25]>
<RightArrow   "->"          [25]>
<SimpleType   "bool"        [25]>
<Comma        ","           [25]>
<RightBrace   "}"           [26]>
<Implements   "implements"  [26]>
<Identifier   "generator"   [26]>
<Semicolon    ";"           [26]>
<Fun          "fun"         [28]>
<LeftParen    "("           [28]>
<Identifier   "self"        [28]>
<Colon        ":"           [28]>
<Star         "*"           [28]>
<Struct       "struct"      [28]>
<Identifier   "filter"      [28]>
<RightParen   ")"           [28]>
<Identifier   "next"        [28]>
<LeftParen    "("           [28]>
<RightParen   ")"           [28]>
<RightArrow   "->"          [28]>
<SimpleType   "int"         [28]>
<LeftBrace    "{"           [28]>
<Var          "let"         [29]>
<Identifier   "pred"        [29]>
<Equal        "="           [29]>
<Identifier   "self"        [29]>
<RightArrow   "->"          [29]>
<Identifier   "pred"        [29]>
<Semicolon    ";"           [29]>
<Var          "var"         [30]>
<Identifier   "i"           [30]>
<Equal        "="           [30]>
<Identifier   "self"        [30]>
<RightArrow   "->"          [30]>
<Identifier   "gen"         [30]>
<Dot          "."           [30]>
<Identifier   "next"        [30]>
<LeftParen    "("           [30]>
<RightParen   ")"           [30]>
<Semicolon    ";"           [30]>
<While        "while"       [31]>
<LeftParen    "("           [31]>
<Bang         "!"           [31]>
<Identifier   "pred"        [31]>
<LeftParen    "("           [31]>
<Identifier   "i"           [31]>
<RightParen   ")"           [31]>
<RightParen   ")"           [31]>
<LeftBrace    "{"           [31]>
<Identifier   "i"           [32]>
<Equal        "="           [32]>
<Identifier   "self"        [32]>
<RightArrow   "->"          [32]>
<Identifier   "gen"         [32]>
<Dot          "."           [32]>
<Identifier   "next"        [32]>
<LeftParen    "("           [32]>
<RightParen   ")"           [32]>
<Semicolon    ";"           [32]>
<RightBrace   "}"           [33]>
<Return       "return"      [34]>
<Identifier   "i"           [34]>
<Semicolon    ";"           [34]>
<RightBrace   "}"           [35]>
<Type         "type"        [37]>
<Identifier   "seive"       [37]>
<Struct       "struct"      [37]>
<LeftBrace    "{"           [37]>
<Identifier   "gen"         [38]>
<Colon        ":"           [38]>
<Impl         "impl"        [38]>
<Identifier   "generator"   [38]>
<Comma        ","           [38]>
<RightBrace   "}"           [39]>
<Implements   "implements"  [39]>
<Identifier   "generator"   [39]>
<Semicolon    ";"           [39]>
<Fun          "fun"         [41]>
<LeftParen    "("           [41]>
<Identifier   "self"        [41]>
<Colon        ":"           [41]>
<Star         "*"           [41]>
<Struct       "struct"      [41]>
<Identifier   "seive"       [41]>
<RightParen   ")"           [41]>
<Identifier   "next"        [41]>
<LeftParen    "("           [41]>
<RightParen   ")"           [41]>
<RightArrow   "->"          [41]>
<SimpleType   "int"         [41]>
<LeftBrace    "{"           [41]>
<Var          "var"         [42]>
<Identifier   "gen"         [42]>
<Equal        "="           [42]>
<Identifier   "self"        [42]>
<RightArrow   "->"          [42]>
<Identifier   "gen"         [42]>
<Semicolon    ";"           [42]>
<Var          "var"         [43]>
<Identifier   "i"           [43]>
<Equal        "="           [43]>
<Identifier   "gen"         [43]>
<Dot          "."           [43]>
<Identifier   "next"        [43]>
<LeftParen    "("           [43]>
<RightParen   ")"           [43]>
<Semicolon    ";"           [43]>
<Var          "let"         [45]>
<Identifier   "pred"        [45]>
<Equal        "="           [45]>
<Lambda       "lambda"      [45]>
<LeftBracket  "["           [45]>
<Identifier   "i"           [45]>
<RightBracket "]"           [45]>
<LeftParen    "("           [45]>
<Identifier   "x"           [45]>
<Colon        ":"           [45]>
<SimpleType   "int"         [45]>
<RightParen   ")"           [45]>
<RightArrow   "->"          [45]>
<SimpleType   "bool"        [45]>
<LeftBrace    "{"           [45]>
<Return       "return"      [45]>
<SimpleType   "float"       [45]>
<LeftParen    "("           [45]>
<Identifier   "x"           [45]>
<Slash        "/"           [45]>
<Identifier   "i"           [45]>
<RightParen   ")"           [45]>
<BangEqual    "!="          [45]>
<Cast         "#"           [45]>
<Identifier   "x"           [45]>
<Slash        "/"           [45]>
<Cast         "#"           [45]>
<Identifier   "i"           [45]>
<Semicolon    ";"           [45]>
<RightBrace   "}"           [45]>
<Semicolon    ";"           [45]>
<Var          "let"         [46]>
<Identifier   "f"           [46]>
<Colon        ":"           [46]>
<Star         "*"           [46]>
<Struct       "struct"      [46]>
<Identifier   "filter"      [46]>
<Equal        "="           [46]>
<Identifier   "malloc"      [46]>
<LeftParen    "("           [46]>
<Sizeof       "sizeof"      [46]>
<LeftParen    "("           [46]>
<Struct       "struct"      [46]>
<Identifier   "filter"      [46]>
<RightParen   ")"           [46]>
<RightParen   ")"           [46]>
<Semicolon    ";"           [46]>
<Star         "*"           [47]>
<Identifier   "f"           [47]>
<Equal        "="           [47]>
<Struct       "struct"      [47]>
<Identifier   "filter"      [47]>
<LeftBrace    "{"           [47]>
<Identifier   "gen"         [47]>
<Colon        ":"           [47]>
<Identifier   "self"        [47]>
<RightArrow   "->"          [47]>
<Identifier   "gen"         [47]>
<Comma        ","           [47]>
<Identifier   "pred"        [47]>
<Colon        ":"           [47]>
<Identifier   "pred"        [47]>
<RightBrace   "}"           [47]>
<Semicolon    ";"           [47]>
<Identifier   "self"        [48]>
<RightArrow   "->"          [48]>
<Identifier   "gen"         [48]>
<Equal        "="           [48]>
<Identifier   "filter_impl_generator" [48]>
<LeftParen    "("           [48]>
<Identifier   "f"           [48]>
<RightParen   ")"           [48]>
<Semicolon    ";"           [48]>
<Return       "return"      [49]>
<Identifier   "i"           [49]>
<Semicolon    ";"           [49]>
<RightBrace   "}"           [50]>
<Const        "const"       [52]>
<Identifier   "NPRIMES"     [52]>
<Equal        "="           [52]>
<Number       "100"         [52]>
<Semicolon    ";"           [52]>
<Fun          "fn"          [53]>
<Identifier   "main"        [53]>
<LeftParen    "("           [53]>
<RightParen   ")"           [53]>
<RightArrow   "->"          [53]>
<SimpleType   "int"         [53]>
<LeftBrace    "{"           [53]>
<Var          "var"         [54]>
<Identifier   "nats"        [54]>
<Equal        "="           [54]>
<Struct       "struct"      [54]>
<Identifier   "nat_gen"     [54]>
<LeftBrace    "{"           [54]>
<Identifier   "i"           [54]>
<Colon        ":"           [54]>
<Number       "2"           [54]>
<RightBrace   "}"           [54]>
<Semicolon    ";"           [54]>
<Var          "var"         [56]>
<Identifier   "gen"         [56]>
<Equal        "="           [56]>
<Struct       "struct"      [56]>
<Identifier   "seive"       [56]>
<LeftBrace    "{"           [56]>
<Identifier   "gen"         [56]>
<Colon        ":"           [56]>
<Identifier   "nat_gen_impl_generator" [56]>
<LeftParen    "("           [56]>
<Amp          "&"           [56]>
<Identifier   "nats"        [56]>
<RightParen   ")"           [56]>
<RightBrace   "}"           [56]>
<Semicolon    ";"           [56]>
<Var          "var"         [58]>
<Identifier   "prod"        [58]>
<Equal        "="           [58]>
<Number       "1"           [58]>
<Semicolon    ";"           [58]>
<For          "for"         [59]>
<LeftParen    "("           [59]>
<Var          "var"         [59]>
<Identifier   "i"           [59]>
<Equal        "="           [59]>
<Number       "0"           [59]>
<Semicolon    ";"           [59]>
<Identifier   "i"           [59]>
<Less         "<"           [59]>
<Identifier   "NPRIMES"     [59]>
<Semicolon    ";"           [59]>
<Identifier   "i"           [59]>
<Equal        "="           [59]>
<Identifier   "i"           [59]>
<Plus         "+"           [59]>
<Number       "1"           [59]>
<RightParen   ")"           [59]>
<LeftBrace    "{"           [59]>
<Var          "let"         [60]>
<Identifier   "p"           [60]>
<Equal        "="           [60]>
<Identifier   "gen"         [60]>
<Dot          "."           [60]>
<Identifier   "next"        [60]>
<LeftParen    "("           [60]>
<RightParen   ")"           [60]>
<Semicolon    ";"           [60]>
<Identifier   "prod"        [61]>
<Equal        "="           [61]>
<Identifier   "prod"        [61]>
<Star         "*"           [61]>
<Identifier   "p"           [61]>
<Semicolon    ";"           [61]>
<RightBrace   "}"           [62]>
<Return       "return"      [63]>
<Identifier   "prod"        [63]>
<Semicolon    ";"           [63]>
<RightBrace   "}"           [64]>
<Eof          ""            [64]>
